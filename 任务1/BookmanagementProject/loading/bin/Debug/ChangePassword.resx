<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AADU4ui+1N9hhJgvXHcwXn0wXX43XX84XX86XX42XH4wXoArYYIpZIQhZH8eZYAdZ38dZ38fZoEcZoAc
        ZIIaZoMVaIQCVnIWZoMkco8gaoYUWHUVU3EyZIBZeZC+zt7QzdbJ4uxNbn0+bYg2b48tZ4tDd59Id51M
        d55MdptIdZs/dp06eZ82fKEvfJ0ufp0tf54tf54uf6AsfqEqfqIogKQkgqUoiKwffaEZdZgiep4zhKk4
        gacybpIvW3hCXXLJz9xgjaI7cYo9hKlLnMkpd6ZBiLpLiLpPh7hRh7ZLhrdBhrc6irk0jLoujbkuj7su
        kb0ukb0skb4okL8mksIkk8UglscYkcMfmMonndAmlsodiLsZfLAjdqk5eKQtWntpgZdHgpxOk7Q8k78a
        eK1AmtBAkMVOkMVXksRZk8RTk8NIlMQ/lsg3lsgzmco0mc0znM8znM8xndMtnNQpndYjoNofodwcpN4X
        odwWntkXm9cbmdQgktEmjMc1iLw8eqMrU3A7fZpAjLAujb4ymM0/m9BElsZXmMVhmcJlnMFinsJVncVL
        nstFn85Dn9JFodZCodlCodk/otw6pd8ypeIsp+Umq+kVo+AQod8SouMbp+kjqekhoOQekM8jgrolcaE1
        ao9Ii6pBj7Q1lMU1mc9AnM2a6P+j3//A8v+97f+67/+V1vVToMFGmb9XrddJm8tTp9tTp9tFn9ZEp+Ez
        odsxq+corOghr+wbruwWq+sVp+gYpucaouQbl9cijccmeq4iYIlOi6tJkLU7lcQ8m81Knsil7P/A8//F
        7/+64vXD7v+48P+i5Pd6w9mY4f16weZeqNJeqNJTo9JMpddMseU7reIrquEjruYesOoYruoXreoXqugW
        peMWmtYbjckgfLEbYItTjKxPkLZClsZFncxSociq6v/C8v+Jr7uavMmkyde15/PB+/+w7v63+f+u7v+M
        zeyMzex9xOlarNVTsN09p9Y0rd4nrN4fsOQar+cWruUTquMRpt8VndcdlMwafbEXYIxXja5UkrhMmMhP
        n85apMi18v/J9v9/o62KqrWFqLWfzNrB9f/B+v+x7Pu79v+w7f+w7f+k5/9/y+hht9tLrtRAsts0tN8r
        teQitOQZruATqt0SptwTntYclswZfK4WX4tcjrJZlLxTmsxVodJgp82t6v/I+f/O9/+FqbONtcFyoLKp
        3PCc1OWHwc2t4+678/678/628v+o7f9ywdxbtddAq808s9o0tuEttuQksuEdruEYqd0XntQclMgYe60X
        Xopgj7VdlL9YnNFao9dgp9N6uty47f/I+P/H9P+DssB3qsRfmLJ7tct3sL+w5+zJ/v/J/v/D+v+z7/9t
        s8perstIp8g8pss2qdQwrdorrt8psOQmrOIiodgjlcogfa4ZXolhj7hflsNantNapNphqdhpr9R5ttC4
        8P+88P/D+f93rsluqMVzq8R1rb688fvK/v/K/v/H/v+08Px8v9R3w9pzx+Nhvt1St91CsNo2qtkyq90w
        quAroNcqlMkngbAeYYhgkblfmMVZn9RYpttdq9pdqM9yt9hzs8y07v+17v+v5/9/t9Buorlwpbqt4fKq
        4fCq4fC/+/+8+/+t8f+m7/+l8f+b7v+I3vxoxOdNr9c+ptU2o9cumtAtkMQug7ElZIphlLxhnMlZotZT
        ptpZq9pZqdJosddnrM2Fw+Gp4vu78v+56/99r8V7r8Z2rseLx9+Lx9+Ex9yn8P+d5/+Y4/2Y4/mo8/+l
        7/+a6P+M4P89l8AxksRDptoui7wzga8nY4dglLxgnclXo9dTp9tWq9tnuudRoMlwt91qqs1+uNXD9f/J
        9/+z5fl2rMVin79nrdJnrdJQnsNXqtBKn8VRpclfrs9Wn7ub3veu8f+g6f95ye5FoM1Bns81jbw2ga0p
        Y4Zgl75in8tZpdlTqd1VrN5Kn81nteNirNZlps2IweCx4/fG9f/E9v90rcZRmLpWpdBWpdBOptRGotFC
        oM5Hos9Tpc5cpsia3fiv7/+n6v+M2PVBlb9FnctBlsQ4gqwrZIRhmL9koc1cqNxXquFYrd9dsuBer9xa
        pdFusNlmo8WCtc/B9P+68/+n6P1frdFFnspFnspCodI0mstCqNlLqttOpdFOncRboMF+wdyp7f+X4ftO
        n8VGm8g1hrM7g6stY4RimcBnpNBgq99Yq+JZruBfs+Ndrdxkr91ansltq9F7s9B/tcy79/+v9P9crtE9
        m8Y9m8Y9odExms06o9Y8n9E3kcBNn8hLkrdipsOq7f+t9f+H0/dYqNFEk7w9gqkuY4RlmcFpptJireFc
        r+NbruFgsuJOnMtirdt1ueZpqtFqpcWGwduo5/yX3/dNn8JDocxDocxJrd1CqNw5odY8odU9mchLncdZ
        oMZLjq1ztc6h5/+Y4f1HkbNJkrhBgqgwY4RnmsJsqNJmr+Ffr+ResOBfrt90wvFSnMxdo9JpqtZamLyK
        xuSy8v+h5/9YpspLoctLocs8msg3mMotj8VPruBqw+9er9VaoMVXmLdmqMGv8/+v9f9RmrZPlrhDg6Yy
        Y4NpmsBwqtRpseFiseRgr+Bdq9phrd5wuuplrd1iptNsrdR9utyr6P+f4fpdosNYo8pYo8pJmsdSp9dI
        ntJ2y/mU5f+Z5f9Vm7leoL1lp8Cr7v+v8v9ZnbpGiKtGgqYyY4NrmsB4rtdrr95msuNmsuJlseFns+Ne
        qNhjrN5ssuFjpNB3t9qw6/+r5/9wrMpbmsBbmsBUmcRZodBRm8t/yPSc5f+j6v9mqMVfoLyBwten6v+g
        4/xfo8BMjrFHg6c6aIpzncJ+sdlys+Btt+dtuORvuuZvuuhgqtpcpddjq9teos9ztNqr5P7A9v+dz+1x
        pclxpclknMVYk8BamMZystuPz/Jvr81Uk69korqu7v+1+f+Kz+pVmrtCg6lFgaU5Z4l6oMOEs9l6t+N5
        wOx1vedttd9yueVpseFkrd9nsOJhp9ZnqtGLxeK57f+35v+YxuWYxuWMvN5soMVnnsVakbZloMBopMFq
        pr6c2e2z9f+g5flmrc5Cia9boMhEf6c4Zoh8ocOItNmCvOaDxPB6v+dutNx1uuVvteRoseNqs+VkrNxi
        p89wrc+j2PPD8v/F8f/F8f+56P+j0vGOwN5wpMJtpb6DvdO48/+w8P+v9P9/yOQ9irFRnMpFi7o+fKU6
        Z4yCpcaLtteJwOeOzPSCw+mAxOl+v+twtONkq91jrN5lr99qr9pystWCu9qr3/a97v+97v+36P/A8P+9
        8P+87/+57/+18P+29P+p7f93wdtYpspWptVGlMk8hbk4dqQ5ZouJq8mRuNiQxeqY1vyHx+qIyOuAwOl2
        ueZrs+Nqs+VstuZuteFts9hpqct4tNKKw+KKw+KLweKr4v+z6v+68v+z7P+i4Pif4vlpsMtXo8dKm8g/
        kspSo+BBi8UzcqQ4ZYuRrMaXutSZyOig2fmNyOiDwuR8uuJ3uOR3vexzu+twuOhttOBnrtR0uN1usNNx
        sdRxsdRzsdd6ttp/uNd7tdJqpsNvr81hpcJtttZbqtFRo9NLnts0hMNGjMc6dKVCaIuZrb6eusugyeCp
        2fWQxuSOyel7ud10tN1yteJusuFusOBxtOFus9tvtNtqr9Zqr9Zqr9Z6veRlps1wr9VwrtJvr9Jtr9Jf
        pshhq89TocxQn9JNndhBisZMiLxNeaJVbYnZ3+atucOatMSGq7+Xw9qFttB+tNN6sNN1rNFzqtFzp89z
        p89xqM1yrM9tqc1rqMprqMpuqMxvqcxwp8xwpslto8RnoMBmocFiocNfnsRWl8NMjr5LhrRVgqhZdZPE
        y97s393SzM3EytGdr7qSrLyEpbiCpbl9obl7nrh8nLl+nLl/nLd+nLd3mbFzlrBwlq5wlq5wla9ymLBz
        lrBxla1ukqpukqpvk6tulKxtla5rk69rka9vkKp5jqPDydbi2N7eyMLSw8Dm4ePk7PPp+//f+f/d9//b
        9//c9P/c8//g8v/g8v/i9f/g+P/g+P/f+P/f+P/d+P/e+f/g+f/e9//d9v/g+f/g+f/f+P/c9//c9//e
        9//k+P/x+f/KxszNubgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>